{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/api/tutorials';\nclass TutorialService {\n  constructor(http) {\n    this.http = http;\n    this.tutorials = [{\n      id: 1,\n      title: \"Beginners Node.js tutorial\",\n      description: \"Level 1 Training \"\n    }, {\n      id: 1,\n      title: \"Beginners Node.js tutorial\",\n      description: \"Level 1 Training \"\n    }, {\n      id: 2,\n      title: \"Beginners C# tutorial\",\n      description: \"Level 1 Training \"\n    }, {\n      id: 3,\n      title: \"Beginners Java tutorial\",\n      description: \"Level 1 Training \"\n    }];\n    this.tutorialsOb = of(this.tutorials);\n  }\n  getAll() {\n    return this.tutorials;\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByTitle(title) {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});\nexport { TutorialService };","map":{"version":3,"names":["of","baseUrl","TutorialService","constructor","http","tutorials","id","title","description","tutorialsOb","getAll","get","create","data","post","update","put","delete","deleteAll","findByTitle","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\source\\git\\Yog4Prog\\spring-boot-angular-16-crud-example\\angular-16-client\\src\\app\\services\\tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Tutorial } from '../models/tutorial.model';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/tutorials';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TutorialService {\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  tutorials: Tutorial[] = [\r\n    {\r\n      id: 1,\r\n      title: \"Beginners Node.js tutorial\",\r\n      description: \"Level 1 Training \"\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Beginners Node.js tutorial\",\r\n      description: \"Level 1 Training \"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Beginners C# tutorial\",\r\n      description: \"Level 1 Training \"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Beginners Java tutorial\",\r\n      description: \"Level 1 Training \"\r\n    },\r\n  ];\r\n\r\n  tutorialsOb: Observable<Tutorial[]> = of(this.tutorials)\r\n  getAll(): Tutorial[] {\r\n    return this.tutorials\r\n  }\r\n\r\n  get(id: any): Observable<Tutorial> {\r\n    return this.http.get<Tutorial>(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByTitle(title: any): Observable<Tutorial[]> {\r\n    return this.http.get<Tutorial[]>(`${baseUrl}?title=${title}`);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;;;AAGrC,MAAMC,OAAO,GAAG,qCAAqC;AAErD,MAGaC,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,SAAS,GAAe,CACtB;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,4BAA4B;MACnCC,WAAW,EAAE;KACd,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,4BAA4B;MACnCC,WAAW,EAAE;KACd,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,uBAAuB;MAC9BC,WAAW,EAAE;KACd,EACD;MACEF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,yBAAyB;MAChCC,WAAW,EAAE;KACd,CACF;IAED,KAAAC,WAAW,GAA2BT,EAAE,CAAC,IAAI,CAACK,SAAS,CAAC;EAzBjB;EA0BvCK,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACL,SAAS;EACvB;EAEAM,GAAGA,CAACL,EAAO;IACT,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAW,GAAGV,OAAO,IAAIK,EAAE,EAAE,CAAC;EACpD;EAEAM,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAACb,OAAO,EAAEY,IAAI,CAAC;EACtC;EAEAE,MAAMA,CAACT,EAAO,EAAEO,IAAS;IACvB,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAC,GAAGf,OAAO,IAAIK,EAAE,EAAE,EAAEO,IAAI,CAAC;EAChD;EAEAI,MAAMA,CAACX,EAAO;IACZ,OAAO,IAAI,CAACF,IAAI,CAACa,MAAM,CAAC,GAAGhB,OAAO,IAAIK,EAAE,EAAE,CAAC;EAC7C;EAEAY,SAASA,CAAA;IACP,OAAO,IAAI,CAACd,IAAI,CAACa,MAAM,CAAChB,OAAO,CAAC;EAClC;EAEAkB,WAAWA,CAACZ,KAAU;IACpB,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAa,GAAGV,OAAO,UAAUM,KAAK,EAAE,CAAC;EAC/D;;AArDWL,eAAe,C;mBAAfA,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfrB,eAAe,C;SAAfA,eAAe;EAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPxB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}