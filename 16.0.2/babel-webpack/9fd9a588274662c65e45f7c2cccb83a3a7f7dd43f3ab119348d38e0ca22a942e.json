{"ast":null,"code":"import { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { STATUS } from '../models/tutorial.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TutorialService {\n  constructor(http) {\n    this.http = http;\n    this.tutorials = [{\n      id: 1,\n      title: \"Beginners Node.js tutorial\",\n      description: \"Level 1 Training \",\n      status: STATUS.NEW\n    }, {\n      id: 2,\n      title: \"Beginners C# tutorial\",\n      description: \"Level 1 Training \",\n      status: STATUS.NEW\n    }, {\n      id: 3,\n      title: \"Beginners Java tutorial\",\n      description: \"Level 1 Training \",\n      status: STATUS.NEW\n    }];\n  }\n  getAll() {\n    return of(this.tutorials);\n  }\n  get(id) {\n    return of(this.tutorials).pipe(\n    // Use the map operator to transform the array into a single Tutorial object\n    map(tutorialArray => tutorialArray.find(tutorial => tutorial.id === id)));\n  }\n  create(data) {\n    const newTutorial = {\n      ...data,\n      id: this.tutorials.length + 1\n    };\n    this.tutorials.push(newTutorial);\n    return of(newTutorial);\n  }\n  update(id, data) {\n    const index = this.tutorials.findIndex(tutorial => tutorial.id === id);\n    if (index !== -1) {\n      const updatedTutorial = {\n        ...this.tutorials[index],\n        ...data\n      };\n      this.tutorials[index] = updatedTutorial;\n      return of(updatedTutorial);\n    } else {\n      return of(null); // Return null if tutorial with given id is not found\n    }\n  }\n\n  delete(id) {\n    const index = this.tutorials.findIndex(tutorial => tutorial.id === id);\n    if (index !== -1) {\n      const deletedTutorial = this.tutorials.splice(index, 1)[0];\n      return of(deletedTutorial); // Return the deleted tutorial as an observable\n    } else {\n      return of(null); // Return null if tutorial with given id is not found\n    }\n  }\n\n  deleteAll() {\n    const deletedTutorials = this.tutorials.slice(); // Make a copy of the array\n    this.tutorials = []; // Clear the tutorials array\n    return of(deletedTutorials);\n  }\n  findByTitle(title) {\n    return of(this.tutorials).pipe(map(tutorialArray => tutorialArray.filter(tutorial => tutorial.title === title)));\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});\nexport { TutorialService };","map":{"version":3,"names":["of","map","STATUS","TutorialService","constructor","http","tutorials","id","title","description","status","NEW","getAll","get","pipe","tutorialArray","find","tutorial","create","data","newTutorial","length","push","update","index","findIndex","updatedTutorial","delete","deletedTutorial","splice","deleteAll","deletedTutorials","slice","findByTitle","filter","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\source\\git\\Yog4Prog\\spring-boot-angular-16-crud-example\\angular-16-client\\src\\app\\services\\tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { STATUS, Tutorial } from '../models/tutorial.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TutorialService {\r\n  tutorials: Tutorial[]\r\n \r\n  constructor(private http: HttpClient) {\r\n    this.tutorials  = [\r\n      {\r\n        id: 1,\r\n        title: \"Beginners Node.js tutorial\",\r\n        description: \"Level 1 Training \",\r\n        status: STATUS.NEW\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Beginners C# tutorial\",\r\n        description: \"Level 1 Training \",\r\n        status: STATUS.NEW\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Beginners Java tutorial\",\r\n        description: \"Level 1 Training \",\r\n        status: STATUS.NEW\r\n      },\r\n    ];\r\n  }\r\n  \r\n  getAll(): Observable<Tutorial[]> {\r\n    return of(this.tutorials);\r\n  }\r\n\r\n  get(id: any): Observable<any> {\r\n    return of(this.tutorials).pipe(\r\n      // Use the map operator to transform the array into a single Tutorial object\r\n      map((tutorialArray: Tutorial[]) => tutorialArray.find(tutorial => tutorial.id === id))\r\n    );\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    const newTutorial: Tutorial = { ...data, id: this.tutorials.length + 1 };\r\n    this.tutorials.push(newTutorial);\r\n    return of(newTutorial);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    const index = this.tutorials.findIndex(tutorial => tutorial.id === id);\r\n    if (index !== -1) {\r\n      const updatedTutorial: Tutorial = { ...this.tutorials[index], ...data };\r\n      this.tutorials[index] = updatedTutorial;\r\n      return of(updatedTutorial);\r\n    } else {\r\n      return of(null); // Return null if tutorial with given id is not found\r\n    }\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    const index = this.tutorials.findIndex(tutorial => tutorial.id === id);\r\n    if (index !== -1) {\r\n      const deletedTutorial = this.tutorials.splice(index, 1)[0];\r\n      return of(deletedTutorial); // Return the deleted tutorial as an observable\r\n    } else {\r\n      return of(null); // Return null if tutorial with given id is not found\r\n    }\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    const deletedTutorials = this.tutorials.slice(); // Make a copy of the array\r\n    this.tutorials = []; // Clear the tutorials array\r\n    return of(deletedTutorials);\r\n  }\r\n\r\n  findByTitle(title: any): Observable<Tutorial[]> {\r\n    return of(this.tutorials).pipe(\r\n      map((tutorialArray: Tutorial[]) => tutorialArray.filter(tutorial => tutorial.title === title)));\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}